{% style %}
{% assign loadedfonts = '' %}    
{% assign familyandweight = section.settings.font.family | append: section.settings.font.weight %}
{% if loadedfonts contains familyandweight %}
{% else %}
  {{ section.settings.font | font_face }}  
{% endif %}   
{% assign loadedfonts = loadedfonts | append: section.settings.font.family | append: section.settings.font.weight | append: section.settings.font.style | append: '|' %}
  
#shopify-section-{{ section.id }} .media-with-content-carousel-section > .section-title-wrap h2 {
    font-family: {{ section.settings.font.family }}; 
    font-weight:{{ section.settings.font.weight }}; 
    font-style:{{ section.settings.font.style }};    
    font-size:{{ section.settings.fontsize }}px;   
}  
  
  
#shopify-section-{{ section.id }} .media-with-content-carousel-section > .section-title-wrap h2 span {
color:{{ section.settings.title_color }};
{% if section.settings.shadow %}
filter: drop-shadow(2px 2px 0px #00000057);
{% endif %}

}
  




#shopify-section-{{ section.id }} .media-with-content-carousel-section > .section-title-wrap > p {  
  color:{{ section.settings.subtitle_color }};
}
  

#shopify-section-{{ section.id }} .media-block .text {  
 color:{{ section.settings.block_text_color }};
 font-size:{{ section.settings.block_text_size }}px;
}

#shopify-section-{{ section.id }} .media-block .text span.subtitle:before {
background:{{ section.settings.block_text_color }};
}


#shopify-section-{{ section.id }} .column>a {
  background:{{ section.settings.backgroundcolor }};
  color:{{ section.settings.color }};
}

  
#shopify-section-{{ section.id }} {  
background-size:cover;  
{% capture backgroundimage %}{{ section.settings.background_image | img_url: '1024x1024' }}{% endcapture %}                                   
{% if backgroundimage contains 'no-image' %}
  {% if section.settings.background_color_2 contains 'transparent' %}
      background-color:{{ section.settings.background_color }};                            
  {% else %}     
    background: -moz-linear-gradient(left, {{ section.settings.background_color }} 0%, {{ section.settings.background_color_2 }} 100%);
    background: -webkit-linear-gradient(left, {{ section.settings.background_color }} 0%, {{ section.settings.background_color_2 }} 100%);
    background: linear-gradient(to right, {{ section.settings.background_color }} 0%, {{ section.settings.background_color_2 }} 100%);                            
  {% endif %}
{% else %}
background-image:url({{ section.settings.background_image | img_url: '1024x1024' }}); background-color:{{ section.settings.background_color }};
{% endif %}      
}
  
{% if section.settings.css != nil %}
{% assign css = section.settings.css | replace: '&gt;','>' %}
{{ css }}
{% endif %}
{% endstyle %}


<div class="media-with-content-carousel-section">
  <div class="section-title-wrap">
    <h2><span>{{ section.settings.title }}</span></h2>
    {% if section.settings.subtitle %}<p>{{ section.settings.subtitle }}</p>{% endif %}
  </div>
   <div class="row align-center align-middle">
    <div class="large-10 text-center column">
      <div class="swiper-container">
        <div class="swiper-wrapper">
          {% for block in section.blocks %}
          {% case block.type %}
          {% when 'Slide' %}
          <div class="swiper-slide">
            <div class="media-block" id="block-{{ block.id }}">
              
              
{% capture image %}{{ block.settings.image | img_url: '1024x1024' }}{% endcapture %}        
              
        
  <div class="media">
   <div class="video-wrap {% if section.settings.animate %} animate{% endif %}">
      {% unless block.settings.youtube_url %}
     {% if block.settings.mp4_url != nil %}
      <span class="mute">
         <i>
            <svg width="931pt" height="931pt" viewBox="0 0 931 931" version="1.1" xmlns="http://www.w3.org/2000/svg">
               <g id="#000000ff">
                  <path fill="#000000" opacity="1.00" d=" M 3.70 24.69 C 9.17 12.55 20.64 2.82 34.02 0.93 C 42.42 -0.04 51.25 0.35 59.04 3.94 C 65.10 6.39 70.17 10.67 74.59 15.40 C 147.55 88.44 220.61 161.38 293.56 234.43 C 295.87 236.53 297.72 239.39 300.68 240.62 C 312.43 229.75 323.41 218.05 335.02 207.03 C 372.14 170.47 409.32 133.99 446.51 97.51 C 467.13 77.13 488.00 57.00 508.44 36.43 C 516.51 29.18 523.61 20.75 532.81 14.84 C 542.27 8.55 553.58 4.35 565.07 5.15 C 574.96 5.71 584.73 10.20 591.00 17.99 C 600.22 29.01 603.10 43.97 602.79 58.00 C 602.86 219.02 602.62 380.04 602.95 541.05 C 602.75 542.99 603.67 544.67 605.11 545.91 C 706.08 646.93 807.08 747.93 908.09 848.91 C 914.48 855.54 922.17 861.34 925.96 870.01 C 935.02 887.72 928.79 911.26 912.43 922.46 C 902.83 929.16 890.37 932.19 878.92 929.15 C 868.62 927.12 859.91 920.61 853.35 912.64 C 573.91 633.09 294.33 353.67 14.90 74.11 C 7.71 67.52 1.93 58.81 0.74 48.96 C 0.18 40.81 -0.03 32.20 3.70 24.69 Z" />
                  <path fill="#000000" opacity="1.00" d=" M 89.36 298.46 C 93.85 297.58 98.45 297.65 103.00 297.67 C 114.68 297.77 126.36 297.59 138.04 297.72 C 142.94 297.54 145.57 302.33 148.81 305.19 C 299.48 455.87 450.13 606.55 600.83 757.19 C 602.15 758.42 602.92 760.10 602.80 761.94 C 602.79 788.63 602.79 815.32 602.79 842.01 C 602.50 858.61 604.05 875.54 599.76 891.79 C 596.75 902.83 590.84 913.63 581.22 920.20 C 573.09 925.79 562.59 927.14 553.08 925.00 C 542.13 922.51 532.30 916.46 524.00 909.03 C 513.79 899.92 504.43 889.91 494.49 880.52 C 410.67 798.69 326.82 716.88 243.05 635.03 C 241.93 634.15 240.37 634.48 239.07 634.33 C 191.72 634.34 144.37 634.34 97.02 634.35 C 77.76 634.60 60.16 619.30 56.40 600.66 C 55.35 595.17 55.72 589.56 55.69 584.00 C 55.68 505.34 55.70 426.67 55.69 348.00 C 55.73 341.93 55.31 335.75 56.74 329.79 C 60.55 314.34 73.74 301.58 89.36 298.46 Z" />
               </g>
            </svg>
         </i>
         Tap for sound
      </span>
     {% endif %}
      {% else %}
      <a data-fancybox href="{{ block.settings.youtube_url }}">
         <svg version="1.1"
            xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:a="http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"
            x="0px" y="0px" width="213.7px" height="213.7px" viewBox="0 0 213.7 213.7" enable-background="new 0 0 213.7 213.7"
            xml:space="preserve">
            <polygon class='triangle' id="XMLID_18_" fill="none" stroke-width="5" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="
               73.5,62.5 148.5,105.8 73.5,149.1 "/>
            <circle class='circle' id="XMLID_17_" fill="none"  stroke-width="7" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" cx="106.8" cy="106.8" r="103.3"/>
         </svg>
      </a>
      {% endunless %}
     
        {% if block.settings.mp4_url %}
         <video playsinline="" autoplay="" preload="auto" loop="loop" muted="muted" onclick="event.preventDefault();">
            <source src="{{ block.settings.mp4_url }}" type="video/mp4">
         </video>
        {% else %}
                {% capture image %}{{ block.settings.image | img_url: '1024x1024' }}{% endcapture %}  
                 {% unless image contains 'no-image' %}
                <img src="{{ block.settings.image | img_url: '1024x1024' }}" /> 
                 {% else %}
                <img src="https://i3.ytimg.com/vi/{{ block.settings.youtube_url.id }}/maxresdefault.jpg" />
                {% endunless %}
        {% endif %}
    </div>   
              </div>
           
     
     

              
              
<div class="text">
{{ block.settings.title }}
{% if block.settings.subtitle != '' %}
  <span class="subtitle">{{ block.settings.subtitle }}</span>
{% endif %}
</div>
              
            </div>
          </div>
          {% endcase %}
          {% endfor %}
        </div>
      </div>
       <a href="{{ section.settings.url }}">{{ section.settings.button_text }}</a>
     </div>
  </div>
</div>

<script>
  var callbackMedia_Slider{{ section.id }} = function(){
  // Handler when the DOM is fully loaded
  if(!window.Swiper) {
    // add script
    var script = document.createElement("script");
    script.type = "text/javascript";   
    script.src = 'https://cdn.jsdelivr.net/npm/swiper@{{ settings.swiperjsversion }}/js/swiper.min.js';
    document.getElementsByTagName("head")[0].appendChild(script);
    // add style
    var style = document.createElement("link");
    style.type = "text/css";  
    style.rel = "stylesheet";
    style.href = 'https://cdn.jsdelivr.net/npm/swiper@{{ settings.swiperjsversion }}/css/swiper.min.css';
    document.getElementsByTagName("head")[0].appendChild(style);
  }
};

if (
    document.readyState === "complete" ||
    (document.readyState !== "loading" && !document.documentElement.doScroll)
) {
  callbackMedia_Slider{{ section.id }}();
} else {
  document.addEventListener("DOMContentLoaded", callbackMedia_Slider{{ section.id }});
}
    
function deferMedia_Slider{{ section.id }}(methodMedia_Slider{{ section.id }}) {
    if (window.jQuery && window.Swiper && window.jQuery.fancybox) {
        methodMedia_Slider{{ section.id }}();
    } else {
        setTimeout(function() { deferMedia_Slider{{ section.id }}(methodMedia_Slider{{ section.id }}) }, 50);
    }
}
deferMedia_Slider{{ section.id }}(function () {  
  
 {% if section.blocks.size > 1 %} 
SliderMedia_Slider{{ section.id }}();  
 {% endif %}  
function SliderMedia_Slider{{ section.id }}() {
  
      var container = document.getElementById('shopify-section-{{ section.id }}').querySelector('.swiper-container');
      var swiper = new Swiper((container), {         
      effect: 'slide',  
      speed: 800,
        autoHeight: true,
        
      autoplay: {
        delay: 7000,
        disableOnInteraction: true,
      },
         
      slidesPerView: 1,  
        slidesPerGroup: 1,
      loop: true,
      direction: 'horizontal',
      navigation: {
        nextEl: document.getElementById('shopify-section-{{ section.id }}').querySelector('.swiper-button-next'),
        prevEl: document.getElementById('shopify-section-{{ section.id }}').querySelector('.swiper-button-prev'),
      },
  breakpoints: {
    1022: {
      spaceBetween: 15,
    },
    720: {
      spaceBetween: 2,
    },
    480: {
        speed: 300,                                  
      spaceBetween: 2,
    },
    320: {
       speed: 300,
      spaceBetween: 2,
    },
  }
      });   
} 
    
  
});    
</script>

{% schema %}
  {
    "name": "Media w/ Content Carousel",
    "settings": [
{ "type":"header",
"content": "Header"
},{
       "id": "title",
       "type": "text",
       "label": "Title"
},
 {
     "type": "font_picker",
     "id": "font",
     "label": "Font",
     "default": "work_sans_n6"
   },
  {
    "type":   "range",
    "id":     "fontsize",
    "min":       30,
    "max":       75,
    "step":     1,
    "unit":      "px",
    "label":     "Title Font Size",
    "default":   40
     },
{
       "id": "title_color",
       "type": "color",
       "label": "Title Color 1",
       "default": "#000000"
},
{
"type": "checkbox",
"id": "shadow",
"label": "Text Shadow",
"default": false
}, 
{
       "id": "subtitle",
       "type": "text",
       "label": "Sub Title"
},
{
       "id": "subtitle_color",
       "type": "color",
       "label": "Sub Title Color",
       "default": "#000000"
},
{ "type":"header",
"content": "Background Colors or Image"
},
{
       "id": "background_image",
       "type": "image_picker",
       "label": "Background Image (Optional)"
},
{
       "id": "background_color",
       "type": "color",
       "label": "Background Color",
       "default": "#ffffff"
},{
       "id": "background_color_2",
       "type": "color",
       "label": "Background Color #2 (Optional Gradient)",
       "default": "transparent"
},
{ "type":"header",
"content": "Slide Font Style"
},
{
       "id": "block_text_color",
       "type": "color",
       "label": "Slide Text Color",
       "default": "#ffffff"
},
{
    "type":   "range",
    "id":     "block_text_size",
    "min":       16,
    "max":       26,
    "step":     1,
    "unit":      "px",
    "label":     "Font Size",
    "default":   20
},
{ "type":"header",
"content": "Button Colors"
},
{
   "id": "button_text",
   "type": "text",
   "label": "Text"
},
{
   "id": "url",
   "type": "url",
   "label": "URL Link"
},
{
        "id": "color",
        "type": "color",
        "label": "Text Color",
        "default": "#FFF"
},
{
        "id": "backgroundcolor",
        "type": "color",
        "label": "Background Color",
        "default": "#000"
},
{
 "type": "header",
 "content": "Additional Custom CSS"
},
{
        "id": "css",
        "type": "html",
        "label": "Custom CSS"
}
],"blocks": [
    {
     "type": "Slide",
     "name": "Slide",
     "settings" : [
{ "type":"header",
"content": "Media"
},
{
       "id": "image",
       "type": "image_picker",
       "label": "Image (Optional)"
},
{
       "id": "mp4_url",
       "type": "url",
       "label": "mp4 preview (Optional)"
},
{
"id": "youtube_url",
"type": "video_url",
"accept": ["youtube"],
"label": "Youtube URL",
"info": "If left empty mute button will be shown instead for on page playback with sound"
},
{ "type":"header",
"content": "Text"
},
{
       "id": "title",
       "type": "textarea",
       "label": "Short Description"
},
{
       "id": "subtitle",
       "type": "text",
       "label": "author (optional)"
}
]}],
  "presets": [
    {
      "name": "Media With Content Slider",
      "category": "z Designer"
    }
  ]
}

{% endschema %}

{% stylesheet 'scss' %}
// responsive sizes
@mixin bp($point) {
  
  $bp-small: "(max-width: 350px)";
  $bp-mobile: "(max-width: 600px)";
  $bp-mobileup: "(min-width: 600px)";
  $bp-phablet: "(max-width: 1022px)";
  $bp-phabletup: "(min-width: 1022px)";
  $bp-tablet: "(max-width: 1280px)";
  $bp-tabletup: "(min-width: 1280px)";
  $bp-laptop: "(max-width: 1600px)";
  $bp-desktop: "(min-width: 1600px)";
  @if $point == desktop {
    @media #{$bp-desktop}  { @content; }
  }  
  @else if $point == laptop {
    @media #{$bp-laptop} { @content; }
  }
  @else if $point == tablet {
    @media #{$bp-tablet} { @content; }
  }
  @else if $point == tabletup {
    @media #{$bp-tabletup} { @content; }
  }
  @else if $point == phablet {
    @media #{$bp-phablet} { @content; }
  }
  @else if $point == phabletup {
    @media #{$bp-phabletup} { @content; }
  }
  @else if $point == mobile {
    @media #{$bp-mobile}  { @content; }
  }
  @else if $point == mobileup {
    @media #{$bp-mobileup} { @content; }
  }
  @else if $point == small {
    @media #{$bp-small}  { @content; }
  }

}

//color transition
@mixin transition($attribute, $duration) {
    -webkit-transition: $attribute $duration ease;
    -moz-transition: $attribute $duration ease;
    transition: $attribute $duration ease;
}



.shopify-section {
	.media-with-content-carousel-section {
		padding-bottom: 40px;
		& .section-title-wrap {
			text-align: center;
			padding: 40px 0px 40px;
			& h2 {
				margin: 0;
				& span {
					display: inline-block;
				}
			}
			& p {
				letter-spacing: 4px;
			}
		}
		& .media-block {
			display: flex;
			align-items: center;
			@include bp(phablet) {
				flex-flow: column;
			}
			& .media {
				position: relative;
				text-align: right;
				& .video-wrap {
					position: relative;
					& .mute {
						color: #fff;
						font-size: 13px;
						position: absolute;
						bottom: 10px;
						left: 10px;
						z-index: 4;
						display: flex;
						align-items: center;
						font-weight: normal;
						letter-spacing: 1px;
						pointer-events: none;
						@include transition(opacity, 0.3s);
						@include bp(mobile) {
							font-size: 9px;
						}
						& i {
							background: rgba(0, 0, 0, 0.61);
							padding: 7px 8px 2px;
							margin-right: 10px;
							border-radius: 100%;

							display: inline-block;
							@include bp(mobile) {
								padding: 4px 7px 1px;
								margin-right: 7px;
							}
							& svg {
								width: 21px;
								height: 100%;
								@include bp(phablet) {
									max-width: 20px;
								}
								& path {
									fill: #fff;
								}
							}
						}
					}
					& video {
						max-width: 100%;
						box-shadow: 1px 1px 20px rgba(0, 0, 0, 0.48);
						z-index: 2;
						position: relative;
					}
					&.unmute {
						& .mute {
							opacity: 0;
						}
					}
					& a {
						display: flex;
						position: absolute;
						width: 100%;
						height: 100%;
						justify-content: center;
						align-items: center;
						z-index: 9;
						& svg {
							max-width: 70%;
							height: auto;
							max-height: 70%;
							& .triangle {
								-webkit-transition: all 0.7s ease-in-out;
								stroke-dasharray: 240;
								stroke-dashoffset: 480;
								stroke: #fff;
								transform: translateY(0);
							}
						}
					}
				}
			}
			& .text {
				margin: 0 0 0 35px;
				display: flex;
				flex-flow: column;
				width: 100%;
                @include bp(phablet) {
					width: 100%;
					margin: 20px 0 0 0;
				}
				& .subtitle {
					padding-top: 15px;
					&:before {
						content: "";
						display: block;
						height: 1px;
						width: 50%;
						margin: 0 auto 15px;
					}
				}
			}
		}
      & .column > a {
    font-family: 'Open Sans', sans-serif;
    text-transform: uppercase;
    border-radius: 30px;
    padding: 18px 50px;
    display: inline-block;
    font-size: 20px;
    margin-top: 35px;
    letter-spacing: 3px;
    @include bp(phablet) {
    padding: 16px 30px;
    font-size: 17px;
    }
     }
	}
}

{% endstylesheet %}

{% javascript %}
{% endjavascript %}       
